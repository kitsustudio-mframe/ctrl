/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 * 
 * SPDX-License-Identifier: MIT
 */

/* ****************************************************************************************
 * Include
 */

//-----------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------
#include "./AnalogInputPin.h"

/* ****************************************************************************************
 * Macro
 */

/* ****************************************************************************************
 * Using
 */

//-----------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------
using ctrl::virt::AnalogInputPin;

/* ****************************************************************************************
 * Variable <Static>
 */

/* ****************************************************************************************
 * Construct Method
 */
 
//-----------------------------------------------------------------------------------------
AnalogInputPin::AnalogInputPin(void){
  this->mValue = 0;
  this->mLevel = 0;
  return;
}

//-----------------------------------------------------------------------------------------
AnalogInputPin::~AnalogInputPin(void){
  this->mValue = 0;
  this->mLevel = 0;
  return;
}

/* ****************************************************************************************
 * Operator Method
 */

/* ****************************************************************************************
 * Public Method <Static>
 */

/* ****************************************************************************************
 * Public Method <Override> - mcuf::hal::AnalogInputPin
 */

//-----------------------------------------------------------------------------------------
uint32_t AnalogInputPin::convert(void){
  return this->mValue;
}

//-----------------------------------------------------------------------------------------
uint32_t AnalogInputPin::getConvertLevel(void){
  return this->mLevel;
}

/* ****************************************************************************************
 * Public Method
 */

//-----------------------------------------------------------------------------------------
void AnalogInputPin::setValue(uint32_t value){
  if(value > this->mLevel)
    value = this->mLevel;
  
  this->mValue = value;
  return;
}

//-----------------------------------------------------------------------------------------
void AnalogInputPin::setConvertLevel(uint32_t level){
  this->mLevel = level;
  if(this->mValue > this->mLevel)
    this->mValue = this->mLevel;

  return;
}
/* ****************************************************************************************
 * Protected Method <Static>
 */

/* ****************************************************************************************
 * Protected Method <Override>
 */

/* ****************************************************************************************
 * Protected Method
 */

/* ****************************************************************************************
 * Private Method
 */

/* ****************************************************************************************
 * End of file
 */
